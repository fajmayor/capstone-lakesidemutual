name: LakeSideMutual CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    AWS_REGION: us-east-1
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    TERRAFORM_ACTION: destroy
    GITHUB_USERNAME: fajmayor
    REPOSITORY_NAME: capstone-lakeside

jobs:

  # Configure AWS Credentials
  configure_aws_credentials:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

  # Build AWS Infrastructure
  deploy_aws_infrastructure:
    name: Build AWS Infrastructure
    needs: configure_aws_credentials
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform Initialize
        working-directory: ./terraform-eks-provision
        run: terraform init

      - name: Run Terraform apply/destroy
        working-directory: ./terraform-eks-provision
        run: terraform ${{ env.TERRAFORM_ACTION }} -auto-approve

      - name: Get Kubeconfig
        working-directory: ./terraform-eks-provision
        run: terraform output kubeconfig > kubeconfig.yaml

      - name: Set up kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: '1.24.0'
        id: install

      - name: Set kubeconfig
        run: |
          aws eks update-kubeconfig --name lakesidemutual

      - name: Verify EKS cluster
        run: kubectl get nodes

  # login to DockerHub
  login_to_aws_ecr_public:
    name: Login to DockerHub
    runs-on: ubuntu-latest
    env:
      REGISTRY_ALIAS: ${{ secrets.DOCKERHUB_USERNAME }}
      REGISTRY: docker.io
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Compose
        uses: withlogicco/setup-compose-cli@v1
        with:
          version: 1.0.23
  
      - name: Build Docker Compose
        working-directory: ./lakesidemutual/kubernetes
        run: |
          export REGISTRY=$REGISTRY
          export REGISTRY_ALIAS=$REGISTRY_ALIAS
          docker-compose -f docker-compose.yml build
          docker images | grep $REGISTRY | cut -f1 -d' ' | xargs -L 1 docker push