name: LakeSideMutual CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    AWS_REGION: ${{ vars.AWS_REGION }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    TERRAFORM_ACTION: apply
    GITHUB_USERNAME: ${{ vars.MY_GITHUB_USERNAME }}
    REPOSITORY_NAME: ${{ vars.REPOSITORY_NAME }}
    REGISTRY_ALIAS: ${{ secrets.DOCKERHUB_USERNAME }}
    REGISTRY: docker.io
    IMAGE_TAG: "latest"

jobs:

  # Configure AWS Credentials
  configure_aws_credentials:
    name: Configure AWS Credentials
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  # Build AWS Infrastructure
  deploy_aws_infrastructures:
    name: Build AWS Infrastructures
    needs: configure_aws_credentials
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
        id: install

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform Initialize
        working-directory: ./terraform-eks-provision
        run: terraform init

      - name: Run Terraform apply/destroy
        working-directory: ./terraform-eks-provision
        run: terraform ${{ env.TERRAFORM_ACTION }} -auto-approve

      # - name: Get Kubeconfig
      #   working-directory: ./terraform-eks-provision
      #   run: terraform output kubeconfig > kubeconfig.yaml
  
      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: ./terraform-eks-provision

      - name: Set kubeconfig
        if: ${{ steps.tf-outputs.outputs.cluster_name != '' }}
        run: |
          aws eks update-kubeconfig --name ${{ steps.tf-outputs.outputs.cluster_name }} --region us-east-2
  
      - name: Verify EKS cluster
        if: ${{ steps.tf-outputs.outputs.cluster_name != '' }}
        run: |
          kubectl get nodes

          kubectl get pods
          kubectl get deployments
          kubectl get services


  # login to DockerHub
  login_to_dockerHub:
    name: Login to DockerHub
    runs-on: ubuntu-latest

    # env:
    #   REGISTRY_ALIAS: ${{ secrets.DOCKERHUB_USERNAME }}
    #   REGISTRY: docker.io
    #   IMAGE_TAG: "latest"
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Compose
        uses: withlogicco/setup-compose-cli@v1
        with:
          version: 1.0.23

      - name: Check image
        id: image_exists
        uses: cloudposse/github-action-docker-image-exists@main
        with:
          registry: ${{ env.REGISTRY }}
          organization: "${{ github.event.repository.owner.login }}"
          #repository: "${{ github.event.repository.name }}"
          repository: "customer-core"
          login: "${{ env.DOCKERHUB_USERNAME }}"
          password: "${{ env.DOCKERHUB_TOKEN }}"
          tag: ${{ env.IMAGE_TAG }}
  
      - name: Build Docker Compose
        if: ${{ steps.image_exists.outputs.image == '' }}
        working-directory: ./lakesidemutual/kubernetes
        run: |
          export REGISTRY=$REGISTRY
          export REGISTRY_ALIAS=$REGISTRY_ALIAS
          export IMAGE_TAG=$IMAGE_TAG
          docker-compose -f docker-compose.yml build
          docker images | grep $REGISTRY | cut -f1 -d' ' | xargs -L 1 docker-compose push

  run_manifests:
    name: Kubernetes manifests
    needs: 
      - deploy_aws_infrastructures
      - login_to_dockerHub

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  #     # - name: "Activate personal namespace"
  #     #   uses: okteto/namespace@main
  #     #   with:
  #     #     name: lakesidemutual

      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: ./terraform-eks-provision

      - name: Set kubeconfig
        if: ${{ steps.tf-outputs.outputs.cluster_name != '' }}
        id: update-kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ steps.tf-outputs.outputs.cluster_name }} --region us-east-2

      - uses: azure/setup-helm@v3
        with:
            version: 'latest' # default is latest (stable)
            token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install

      - name: Run Manifest
        if: ${{ steps.tf-outputs.outputs.cluster_name != '' }}
        working-directory: ./project-template/infra/
        run: |
          kubectl apply -f backend.yaml
          kubectl apply -f frontend.yaml
          kubectl apply -f grafana.yaml
          kubectl apply -f node-exporter.yaml
          kubectl apply -f prometheus.yaml